void ListDelegate::paint(QPainter *painter, const QStyleOptionViewItem &option, const QModelIndex &index) const
{
    QRect r = option.rect;

    // Цвета и кисти
    QPen linePen(QColor::fromRgb(211, 211, 211), 1, Qt::SolidLine);
    QPen lineMarkedPen(QColor::fromRgb(0, 90, 131), 1, Qt::SolidLine);
    QPen fontPen(QColor::fromRgb(51, 51, 51), 1, Qt::SolidLine);
    QPen fontMarkedPen(Qt::white, 1, Qt::SolidLine);

    // Рисуем фон
    if (option.state & QStyle::State_Selected) {
        QLinearGradient gradientSelected(r.left(), r.top(), r.left(), r.height() + r.top());
        gradientSelected.setColorAt(0.0, QColor::fromRgb(59, 158, 220));
        gradientSelected.setColorAt(1.0, QColor::fromRgb(59, 158, 220));
        painter->setBrush(gradientSelected);
        painter->drawRect(r);
        painter->setPen(fontMarkedPen);
    } else {
        painter->setBrush(QColor::fromRgb(250, 237, 241));
        painter->drawRect(r);
        painter->setPen(fontPen);
    }

    // Данные элемента
    QIcon newMsg = QIcon(":/resource/222/m_krug.png");
    QIcon statusUser = QIcon(":/resource/222/vseti.png");
    QString title = index.data(Qt::DisplayRole).toString();
    QString description = index.data(Qt::UserRole + 1).toString();
    QString date = index.data(Qt::UserRole + 2).toString();
    QString new_mes = index.data(Qt::UserRole + 3).toString();
    int status_seti = index.data(Qt::UserRole + 4).toInt();
    QString contact_photo = index.data(Qt::UserRole + 5).toString();

    // Рисуем аватарку в круге
    int avatarDiameter = 50; // Диаметр круга аватара
    QRect avatarRect(option.rect.left() + 10, option.rect.top() + (option.rect.height() - avatarDiameter) / 2, avatarDiameter, avatarDiameter);

    QImage avatarImage;
    if (contact_photo.isEmpty()) {
        avatarImage = QImage(":/resource/222/avatar.png");
    } else {
        avatarImage = QImage(contact_photo);
    }

    if (!avatarImage.isNull()) {
        QImage scaledAvatar = avatarImage.scaled(
            avatarRect.size(),
            Qt::KeepAspectRatioByExpanding,
            Qt::SmoothTransformation
        );

        // Центрируем и обрезаем до квадрата
        QRect centerCrop(
            (scaledAvatar.width() - avatarRect.width()) / 2,
            (scaledAvatar.height() - avatarRect.height()) / 2,
            avatarRect.width(),
            avatarRect.height()
        );
        scaledAvatar = scaledAvatar.copy(centerCrop);

        // Обрезаем в круг
        QPainterPath path;
        path.addEllipse(avatarRect);

        painter->save();
        painter->setClipPath(path);
        painter->drawImage(avatarRect, scaledAvatar);
        painter->restore();

        // (Дополнительно) Белая рамка вокруг круга:
        painter->save();
        QPen pen(Qt::white, 2);
        painter->setPen(pen);
        painter->setBrush(Qt::NoBrush);
        painter->drawEllipse(avatarRect);
        painter->restore();
    }

    int imageSpace = 70; // Смещение текста справа от аватара

    // Новое сообщение
    if (!new_mes.isEmpty()) {
        QRect newMsgRect = option.rect.adjusted(409, 22, -7, -7);
        newMsg.paint(painter, newMsgRect, Qt::AlignVCenter | Qt::AlignLeft);
    }

    // Статус пользователя
    if (status_seti == 1) {
        QRect statusRect(avatarRect.right() - 10, avatarRect.bottom() - 10, 10, 10);
        statusUser.paint(painter, statusRect, Qt::AlignCenter);
    }

    // Заголовок (имя контакта)
    r = option.rect.adjusted(imageSpace, 0, -10, -30);
    painter->setFont(QFont("Arial", 11, QFont::Bold));
    painter->drawText(r.left(), r.top(), r.width(), r.height(), Qt::AlignBottom | Qt::AlignLeft, title, &r);

    // Описание (статус или сообщение)
    r = option.rect.adjusted(imageSpace, 30, -10, 0);
    if (description.length() > 45) {
        qreal maxWidth = std::max(150.0, option.rect.width() * 0.7);
        r.setWidth(maxWidth);
    }
    painter->setFont(QFont("Lucida Grande", 10, QFont::Normal));
    painter->drawText(r.left(), r.top(), r.width(), r.height(), Qt::AlignLeft, description, &r);

    // Дата
    r = option.rect.adjusted(402, 6, -10, 0);
    painter->setFont(QFont("Lucida Grande", 10, QFont::Normal));
    painter->drawText(r.left(), r.top(), r.width(), r.height(), Qt::AlignLeft, date, &r);

    // Количество новых сообщений
    if (new_mes.length() < 2) {
        r = option.rect.adjusted(418, 30, -10, 0);
    } else {
        r = option.rect.adjusted(414, 30, -10, 0);
    }
    painter->setFont(QFont("Lucida Grande", 9, QFont::Normal));
    painter->drawText(r.left(), r.top(), r.width(), r.height(), Qt::AlignLeft, new_mes, &r);
}
